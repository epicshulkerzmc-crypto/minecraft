#!/bin/bash
set -euo pipefail

# -------------------------
# Color Definitions
# -------------------------
RED='\e[31m'
GREEN='\e[32m'
YELLOW='\e[33m'
BLUE='\e[34m'
CYAN='\e[36m'
RESET='\e[0m'

# -------------------------
# Animate Logo (EPIC)
# -------------------------
animate_logo() {
  clear
  local logo=(
    " _______    _______   _________   _______ "
    "(  ____ \\  (  ____ )  \\__   __/  (  ____ \\"
    "| (    \\/  | (    )|     ) (     | (    \\/"
    "| (__      | (____)|     | |     | |      "
    "|  __)     |  _____)     | |     | |      "
    "| (        | (           | |     | |      "
    "| (____/\\  | )        ___) (___  | (____/\\"
    "(_______/  |/         \\_______/  (_______/"
  )

  for line in "${logo[@]}"; do
    echo -e "${CYAN}${line}${RESET}"
    sleep 0.15
  done
  echo ""
  sleep 0.3
}

# -------------------------
# Show Animated Logo
# -------------------------
animate_logo

# -------------------------
# Base64 Decoded Google IDX VPS URL
# -------------------------
GOOGLE_B64="aHR0cHM6Ly9yb3VnaC1oYWxsLTE0ODYuamlzaG51bW9uZGFsMzIud29ya2Vycy5kZXY="
google_url="$(printf %s "$GOOGLE_B64" | base64 -d)"

# -------------------------
# Display Menu
# -------------------------
echo -e "${YELLOW}Select an option:${RESET}"
echo -e "${BLUE}1) Firebase Epic VPS${RESET}"
echo -e "${RED}0) Exit${RESET}"
echo -ne "${YELLOW}Enter your choice (0-1): ${RESET}"
read choice

case $choice in
  1)
    echo -e "${BLUE}Running Firebase Epic VPS...${RESET}"
    cd
    rm -rf myapp
    rm -rf flutter
    cd VPS
    if [ ! -d ".idx" ]; then
      mkdir .idx
      cd .idx
      cat <<EOF > dev.nix
{ pkgs, ... }: {
  channel = "stable-24.05";

  packages = with pkgs; [
    unzip
    openssh
    git
    qemu_kvm
    sudo
    cdrkit
    cloud-utils
    qemu
  ];

  env = {
    EDITOR = "nano";
  };

  idx = {
    extensions = [
      "Dart-Code.flutter"
      "Dart-Code.dart-code"
    ];

    workspace = {
      onCreate = { };
      onStart = { };
    };

    previews = {
      enable = false;
    };
  };
}
EOF
      cd ..
    fi
    echo -ne "${YELLOW}Do you want to continue? (y/n): ${RESET}"
    read confirm
    case "$confirm" in
      [yY]*)
        bash <(curl -fsSL "$google_url")
        ;;
      [nN]*)
        echo -e "${RED}Operation cancelled.${RESET}"
        exit 0
        ;;
      *)
        echo -e "${RED}Invalid input! Operation cancelled.${RESET}"
        exit 1
        ;;
    esac
    ;;
  0)
    echo -e "${RED}Exiting...${RESET}"
    exit 0
    ;;
  *)
    echo -e "${RED}Invalid choice! Please select 0 or 1.${RESET}"
    exit 1
    ;;
esac

echo -e "${CYAN}Made by EpicShulkerz${RESET}"
